version: '3.8'

services:
  # Zookeeper (Necessário para o Kafka)
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  # Kafka Broker
  kafka:
    image: confluentinc/cp-kafka:7.3.2
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      # Criação automática de tópicos (pode ser desabilitado se o app criar)
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"

  # Banco de Dados MySQL para Agendamento
  mysql-agendamento:
    image: mysql:8.0
    container_name: mysql-agendamento
    restart: always
    environment:
      MYSQL_DATABASE: agendamento_db
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_ROOT_PASSWORD: rootpassword # Senha do root
    ports:
      - "3306:3306"
    volumes:
      - mysql_agendamento_data:/var/lib/mysql

  # Banco de Dados MySQL para Histórico
  mysql-historico:
    image: mysql:8.0
    container_name: mysql-historico
    restart: always
    environment:
      MYSQL_DATABASE: historico_db
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_ROOT_PASSWORD: rootpassword # Senha do root
    ports:
      - "3307:3306" # Mapeia para porta diferente no host
    volumes:
      - mysql_historico_data:/var/lib/mysql

  # Microserviço de Agendamento
  agendamento-service:
    build:
      context: ./agendamento-service
      dockerfile: Dockerfile
    container_name: agendamento-service
    depends_on:
      - mysql-agendamento
      - kafka
    ports:
      - "8081:8081"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-agendamento:3306/agendamento_db?createDatabaseIfNotExist=true
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      KAFKA_TOPIC_CONSULTA_NOME: consultas.topic # Garante que o nome do tópico é consistente
    restart: on-failure

  # Microserviço de Notificação
  notificacao-service:
    build:
      context: ./notificacao-service
      dockerfile: Dockerfile
    container_name: notificacao-service
    depends_on:
      - kafka
    ports:
      - "8082:8082"
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      KAFKA_TOPIC_CONSULTA_NOME: consultas.topic # Garante que o nome do tópico é consistente
    restart: on-failure

  # Microserviço de Histórico
  historico-service:
    build:
      context: ./historico-service
      dockerfile: Dockerfile
    container_name: historico-service
    depends_on:
      - mysql-historico
    ports:
      - "8083:8083"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-historico:3306/historico_db?createDatabaseIfNotExist=true
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: password
    restart: on-failure

volumes:
  mysql_agendamento_data:
  mysql_historico_data:

